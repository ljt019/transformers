name: Build and Release

on:
  push:
    branches:
      - main

jobs:
  test: 
    name: Run Tests 
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Run Tests
        run: cargo test --release

  build:
    name: Build Release Artifacts
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Build release
        run: cargo build --release

  publish_tool_macro:
    name: Publish tool_macro to crates.io
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Publish tool_macro crate
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}
        run: |
          cd tool_macro
          cargo publish --allow-dirty

  update_and_publish_main:
    name: Update dependency and publish main crate
    needs: publish_tool_macro
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Update tool_macro dependency
        run: |
          # Get the tool_macro version
          TOOL_MACRO_VERSION=$(grep '^version =' tool_macro/Cargo.toml | cut -d '"' -f 2)
          
          # Update the main Cargo.toml to use published version instead of path
          sed -i "s/tool_macro = { path = \"\.\/tool_macro\", version = \"[^\"]*\" }/tool_macro = \"$TOOL_MACRO_VERSION\"/" Cargo.toml

      - name: Wait for crates.io propagation
        run: sleep 30

      - name: Publish main crate
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}
        run: cargo publish --allow-dirty

  create_github_release:
    name: Create Github Release
    needs: update_and_publish_main
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Extract version from Cargo.toml
        id: get_version
        run: echo "::set-output name=version::$(grep '^version =' Cargo.toml | cut -d '"' -f 2)"

      - name: Create Github Release
        uses: ncipollo/release-action@v1
        with:
          tag: v${{ steps.get_version.outputs.version }}
          token: ${{ secrets.GITHUB_TOKEN }}
